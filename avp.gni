import("//build/config/arm.gni")
import("//build/config/features.gni")
import("//build/config/mips.gni")
import("//build/config/sanitizers/sanitizers.gni")
import("//build/config/sysroot.gni")
import("//build/config/ui.gni")
import("//build_overrides/build.gni")

import("//base/build/ave.gni")

declare_args() {
  enable_ffmpeg = true
  enable_ffmpeg_demuxer = true
  enable_ffmpeg_decoder = true
}

declare_args() {
  avp_enable_ffmpeg = enable_ffmpeg
  avp_enable_ffmpeg_demuxer = enable_ffmpeg && enable_ffmpeg_demuxer
  avp_enable_ffmpeg_decoder = enable_ffmpeg && enable_ffmpeg_decoder
}

avp_root = get_path_info(".", "abspath")

avp_common_configs = [ avp_root + ":common_config" ]

# Global public configuration that should be applied to all WebRTC targets. You
# normally shouldn't need to include this in your target as it's automatically
# included when using the avp_* templates. It set the defines, include paths and
# compilation warnings that should be propagated to dependents of the targets
# depending on the target having this config.
avp_common_inherited_config = avp_root + ":common_inherited_config"

# Common configs to remove or add in all avp targets.
avp_remove_configs = []
avp_remove_configs += [ "//build/config/compiler:no_exceptions" ]

if (is_clang) {
  avp_remove_configs += [ "//build/config/clang:find_bad_constructs" ]
}
avp_add_configs = avp_common_configs
avp_add_configs += [ "//build/config/compiler:rtti" ]
avp_add_configs += [ "//build/config/compiler:exceptions" ]

avp_prod_configs = [ avp_root + ":avp_prod_config" ]

avp_library_impl_config = [ avp_root + ":library_impl_config" ]
