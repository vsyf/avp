import("avp.gni")

group("default") {
  testonly = true
  deps = [ ":avp" ]
  deps += [ "examples" ]
  deps += [ "test" ]
}

config("library_impl_config") {
  defines = [ "AVP_LIBRARY_IMPL" ]
}

config("common_inherited_config") {
  defines = []
  configs = []
  ldflags = []

  if (avp_enable_ffmpeg) {
    defines += [ "AVP_FFMPEG" ]
  }

  if (avp_enable_ffmpeg_demuxer) {
    defines += [ "AVP_FFMPEG_DEMUXER" ]
  }

  if (avp_enable_ffmpeg_decoder) {
    defines += [ "AVP_FFMPEG_DECODER" ]
  }
}

config("no_exit_time_destructors") {
  if (is_clang) {
    cflags = [ "-Wno-exit-time-destructors" ]
  }
}

config("no_global_constructors") {
  if (is_clang) {
    cflags = [ "-Wno-global-constructors" ]
  }
}

config("avp_prod_config") {
  if (is_clang) {
    cflags = [
      "-Wexit-time-destructors",
      "-Wglobal-constructors",
    ]
  }
}

config("common_config") {
  cflags = []
  cflags_c = []
  cflags_cc = []
  cflags_objc = []
  defines = []
}

avp_static_library("avp") {
  sources = []

  complete_static_lib = true
  suppressed_configs += [ "//build/config/compiler:thin_archive" ]
  defines = []
  deps = []

  deps += [
    "base",
    "common",
    "player",
  ]

  deps += [ "demuxer" ]
}
